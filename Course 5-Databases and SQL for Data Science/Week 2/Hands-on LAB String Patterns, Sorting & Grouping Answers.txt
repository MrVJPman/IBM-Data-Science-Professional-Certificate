Question 1: Were there any warnings loading data into the JOBS table? What can
be done to resolve this?

-->Yes. The column JOB_TITLE permits 15 characters but we're adding rows with more than 15 characters.
-->We can fix this by extending the size limit 

Question 2: Did all rows from the source file load successfully in the DEPARTMENT
table? If not, are you able to figure out why not?
Hint: Look at the warning. Also, note the Primary Key for this table. 

-->No, it's because DEPT_ID_DEP is a primary key. Two of the rows has the same number for this key.






--Query 1: Retrieve all employees whose address is in Elgin,IL

SELECT * FROM employees WHERE ADDRESS LIKE '%Elgin,IL';

--Query 2: Retrieve all employees who were born during the 1970's

SELECT * FROM employees WHERE B_DATE LIKE '197%';

--Query 3: Retrieve all employees in department 5 whose salary is between 60000 and 70000 .

SELECT * FROM employees WHERE DEP_ID = 5 AND SALARY BETWEEN 60000 AND 70000;

--Query 4A: Retrieve a list of employees ordered by department ID. 

SELECT * FROM employees ORDER BY DEP_ID;

--Query 4B: Retrieve a list of employees ordered in descending order by department ID and within each department ordered alphabetically in descending order by last name.

SELECT * FROM employees ORDER BY DEP_ID DESC, L_NAME DESC;

--Query 5A: For each department ID retrieve the number of employees in the department.

SELECT DEP_ID, count(*)  FROM employees GROUP BY DEP_ID;

--Query 5B: For each department retrieve the number of employees in the department, and the average employees salary in the department.

SELECT DEP_ID, count(*), avg(SALARY) FROM employees GROUP BY DEP_ID;

--Query 5C: Label the computed columns in the result set of Query 5B as “NUM_EMPLOYEES” and “AVG_SALARY”.

SELECT DEP_ID, count(*)  AS "NUM_EMPLOYEES",  avg(SALARY)  AS "AVG_SALARY" FROM employees GROUP BY DEP_ID;

--Query 5D: In Query 5C order the result set by Average Salary.

SELECT DEP_ID, count(*)  AS "NUM_EMPLOYEES",  avg(SALARY)  AS "AVG_SALARY" FROM employees GROUP BY DEP_ID ORDER BY AVG_SALARY;

--Query 5E: In Query 5D limit the result to departments with fewer than 4 employees

SELECT DEP_ID, count(*)  AS NUM_EMPLOYEES,  avg(SALARY)  AS AVG_SALARY FROM employees GROUP BY DEP_ID HAVING count(*) < 4 ORDER BY AVG_SALARY;

--BONUS Query 6: Similar to 4B but instead of department ID use department
--name. Retrieve a list of employees ordered by department name, and within
--each department ordered alphabetically in descending order by last name.

SELECT * FROM employees INNER JOIN departments ON employees.DEP_ID=departments.DEPT_ID_DEP ORDER BY DEP_NAME ASC, L_NAME DESC;
